name: update-benchmark-thresholds
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:

defaults:
  run:
    shell: bash --noprofile --norc -e -u -o pipefail {0}

env:
  RUN_LINK: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

jobs:
  update-thresholds:
    runs-on: [self-hosted, linux, x64]

    container: swiftlang/swift:nightly-6.2-noble

    timeout-minutes: 60

    permissions:
      pull-requests: write # For the comment action
      contents: write # For the committing the changes

    steps:
      - name: Install dependencies
        run: |
          apt update -q && apt install -yq libjemalloc-dev zstd curl jq

      - name: Find commit info
        id: commit-info
        run: |
          # 'github.event.pull_request.head.sha' is needed for certain 'pull_request' events, such
          # as 'opened' and 'reopened' events.
          COMMIT_SHA="${{ github.event.after || github.event.pull_request.head.sha }}"

          if [[ -n "${COMMIT_SHA}" ]]; then
            FULL_SHA="$(curl "https://api.github.com/repos/${{ github.repository }}/commits/${COMMIT_SHA}" | jq -r '.sha')"
            SHORT_NAME="$(echo $FULL_SHA | cut -c 1-7)"

            # Get the oldest PR that contains the commit
            PR="$(
              curl "https://api.github.com/search/issues?q=${FULL_SHA}" | \
                jq 'select(.items[].pull_request.url | contains("/${{ github.repository }}/")) | .items[-1]'
            )"
            PR_NUMBER="$(echo "${PR}" | jq -r '.number')"

            if [[ -z "${PR_NUMBER}" ]]; then
              echo "Failed to find PR info for commit ${COMMIT_SHA}"
              echo 'pr_number=' >> "${GITHUB_OUTPUT}"
              FILES_LINK="https://github.com/${{ github.repository }}/commit/${GITHUB_SHA}"
            else
              echo "pr_number=${PR_NUMBER}" >> "${GITHUB_OUTPUT}"
              FILES_LINK="https://github.com/${{ github.repository }}/pull/${PR_NUMBER}/commits/${FULL_SHA}"
            fi
          else
            echo 'pr_number=' >> "${GITHUB_OUTPUT}"
            SHORT_NAME='${{ github.ref_name }}'
            FILES_LINK="https://github.com/${{ github.repository }}/commit/${GITHUB_SHA}"
          fi

          echo "md_link=[${SHORT_NAME}](${FILES_LINK})" >> "${GITHUB_OUTPUT}"

      - name: Construct in-progress comment
        if: steps.commit-info.outputs.pr_number != ''
        run: |
          echo "## [Benchmark Thresholds Update](${RUN_LINK}) Report for ${{ steps.commit-info.outputs.md_link }}" >> in-progress-comment.md
          echo 'Thresholds update in progress...' >> in-progress-comment.md

      - name: Comment in PR
        if: steps.commit-info.outputs.pr_number != ''
        uses: thollander/actions-comment-pull-request@v3
        with:
          pr-number: ${{ steps.commit-info.outputs.pr_number }}
          file-path: in-progress-comment.md
          comment-tag: benchmark-thresholds-update-comment

      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure git
        run: |
          git config --global --add safe.directory "${GITHUB_WORKSPACE}"
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Restore .build
        if: ${{ runner.debug != '1' }}
        id: restore-cache
        uses: actions/cache/restore@v4
        with:
          path: Benchmarks/.build
          key: "swiftpm-benchmark-update-thresholds-build-${{ runner.os }}-${{ github.sha }}"
          restore-keys: "swiftpm-benchmark-update-thresholds-build-${{ runner.os }}-"

      - name: Update benchmark thresholds
        run: |
          swift package -c release \
            --package-path Benchmarks \
            --allow-writing-to-package-directory \
            benchmark thresholds update \
            --path Benchmarks/Thresholds \
            --run-count 30 \
            --range \
            --relative

      - name: Cache .build
        if: steps.restore-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: Benchmarks/.build
          key: "swiftpm-benchmark-update-thresholds-build-${{ runner.os }}-${{ github.sha }}"

      - name: Format threshold files with jq
        run: |
          echo "Processing threshold files..."
          for file in Benchmarks/Thresholds/*.json; do
            echo "Processing: $file"
            jq '.' "$file" > "${file}.tmp" && mv "${file}.tmp" "$file"
          done

      - name: Check for modifications
        id: check-modifications
        run: |
          MODIFICATIONS="$(git status --porcelain)"
          if [ -n "$MODIFICATIONS" ]; then
            echo "has-modifications=true" >> $GITHUB_OUTPUT
            echo "changes-count=$(git status --porcelain | awk '{print $2}' | uniq | wc -l)" >> $GITHUB_OUTPUT
          else
            echo "has-modifications=false" >> $GITHUB_OUTPUT
            echo "changes-count=0" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push changes
        if: steps.check-modifications.outputs.has-modifications == 'true'
        run: |
          git add Benchmarks/Thresholds/
          git commit -m "Update benchmark thresholds

          Committed by https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

          git push origin "HEAD:${{ github.ref }}"

      - name: Construct result comment
        run: |
          echo "## [Benchmark Thresholds Update](${RUN_LINK}) Report" >> comment.md
          echo 'Thresholds update completed with ${{ steps.check-modifications.outputs.changes-count }} files changed.' >> comment.md

      - name: Update comment in PR
        if: steps.commit-info.outputs.pr_number != ''
        id: pr-comment
        uses: thollander/actions-comment-pull-request@v3
        with:
          pr-number: ${{ steps.commit-info.outputs.pr_number }}
          file-path: comment.md
          comment-tag: benchmark-thresholds-update-comment

      - name: Output the comment as job summary
        run: |
          cat comment.md >> "${GITHUB_STEP_SUMMARY}"
          if [[ -n '${{ steps.commit-info.outputs.pr_number }}' ]]; then
            echo 'Commented at ${{ steps.pr-comment.outputs.html-url }}' >> "${GITHUB_STEP_SUMMARY}"
          fi
